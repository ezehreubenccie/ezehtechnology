---
- name: "PLAY 1: Backup config of utd devices"
  hosts: wa5525xasas:wa5555xasas
  gather_facts: False

  vars: 
    source_file: running-config
    ftp_ip: '10.1.101.70'
    ftp_user: 'reuben3010'
    ftp_pass: !vault |
          $ANSIBLE_VAULT;1.2;AES256;reuben3010
          36373037643461376333393863323262356639656135313633646637383131373732326262646430
          6231333532313535393436396438643261346537616366640a373664316132393463656562313935
          64366165663239343065353362626337656132316230646639326265333331373930356333613136
          3039656333316233300a323132376261663739313564663464303335633635383136653931366464
          6664

  tasks:
    - name: "TASK 1: get timestamp"
      command: date +%Y-%m-%d_%H_%M_%S
      register: timestamp
      tags:
        - backup_to_ansible_node
        - backup_to_file_server
        - backup_to_disk
#
#    - debug:
#        var: timestamp

    - name: "TASK 2: set destination file name"
      set_fact:
        dest_file:  'UTD_Net_Device_Backups/2023/{{ inventory_hostname }}/{{ inventory_hostname }}-running-config-{{ timestamp.stdout }}.txt'
      tags:
        - backup_to_ansible_node
        - backup_to_file_server

    - name: "TASK 3: set destination file name for local disk"
      set_fact:
        dest_file_disk: '{{ inventory_hostname }}-running-config-{{ timestamp.stdout }}.cfg'
      tags:
        - backup_to_disk
      
        
    - name: "TASK 4: Create folder"
      file: 
        path: '../UTD_Backups/2023'
        state: directory
      run_once: true
      tags: backup_to_ansible_node      

    - name: "TASK 5: backup asa firewall config"
      asa_config:
        backup: yes
        backup_options:
          filename: '{{ inventory_hostname }}-running-config-{{ timestamp.stdout }}.txt'
          dir_path: "../UTD_Backups/2023/{{ inventory_hostname }}"
      tags: backup_to_ansible_node

    - name: "TASK 6: bacup asa config to file server"
      cli_command:
        command: 'copy  {{ source_file }}  ftp://{{ ftp_user }}:{{ ftp_pass }}@{{ ftp_ip }}/{{ dest_file }}'
        prompt:
          - Source filename
          - Address or name of remote host
          - Destination username
          - Destination password
          - Destination filename
        #  - Warning
        answer:
          - '{{ source_file }}'
          - '{{ ftp_ip }}'
          - '{{ ftp_user }}'
          - '{{ ftp_pass }}'
          - '{{ dest_file }}'
        #  - 'n'
        check_all: True
      tags: backup_to_file_server

    - name: "TASK 7: backup asa to local disk"
      cli_command:
        command: 'copy  {{ source_file }}  disk0:/{{ dest_file_disk }}'
        prompt:
          - Source filename
          - Destination filename
        answer:
          - '{{ source_file }}'
          - '{{ dest_file_disk }}'
        check_all: True
      tags:
        - backup_to_disk
        

    
      
