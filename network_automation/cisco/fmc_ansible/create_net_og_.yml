- hosts: wa-fmc2500
  connection: httpapi
  tasks:
    - name: Get Domain UUID
      cisco.fmcansible.fmc_configuration:
        operation: getAllDomain
        register_as: domain

    - name: Execute 'createMultipleNetworkObject' operation
      cisco.fmcansible.fmc_configuration:
        operation: "createMultipleNetworkObject"
        data:
          - name: "{{ og_name[2].net_obj_name }}"
            value: "{{ og_name[2].net }}"
            overridable: False
            # description: Network obj 1
            type: Network
          - name: "{{ og_name[3].net_obj_name }}"
            value: "{{ og_name[3].net }}"
            overridable: False
            # description: Network obj 2
            type: Network
        path_params:
          domainUUID: "{{ domain[0].uuid }}"
        query_params:
          bulk: true
        register_as: net
    
    - debug:
        var: net

    - name: "Execute getAllNetworkGroup operation"
      cisco.fmcansible.fmc_configuration:
        operation: "getAllNetworkGroup"
        path_params:
          domainUUID: "{{ domain[0].uuid }}"
        query_params:
          filter: "nameOrValue:{{ og_name[2].name }}"
          offset: "{{ offset }}"
          limit: "{{ limit }}"
          expanded: "{{ expanded }}"
        register_as: netog_id
      
    - debug:
        var: netog_id[0].id

    - name: Execute 'updateNetworkGroup' operation
      cisco.fmcansible.fmc_configuration:
        operation: "updateNetworkGroup"
        data:
          #id: networkGroup1UUID
          name: "{{ netog_id[0].name }}"
          type: NetworkGroup
          objects: [{'type': 'Network', 'id': '{{ net[0].id }}'}, {'type': 'Network', 'id': '{{ net[1].id }}'} ]
          # literals: [{'type': 'Network', 'value': '10.100.204.0/22'}]
        path_params:
          objectId: "{{ netog_id[0].id }}"
          domainUUID: "{{ domain[0].uuid }}"
        # query_params:
        #   action: "{{ og_name[2].action }}"
      # loop: "{{ netog_id }}"














