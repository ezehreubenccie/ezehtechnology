- name : CHANGE BOOT SYSTEM ON 2960X SWITCH TO NEW SOFTWARE
  connection: network_cli
  hosts: usap2960xswitches
  gather_facts: false




  vars:
    ios_archive: "c2960x-universalk9-tar.152-7.E2.tar"
    ios_binary: "c2960x-universalk9-mz.152-7.E2.bin"
    ios_md5_tar: "9d4271dc68544234a36ee438337e8663"
    ios_md5_bin: 92f76f98a52a92cbd40c6ed16eecdb27
    folder: c2960x-universalk9-mz.152-7.E2
    ios_version: "15.2(7)E2"


  tasks:
    - name: Gather all 2960X Switch Hardware facts
      ios_facts:
        gather_subset: hardware
      register: output

    - name: Get Copied INSTALLED BIN Software from flash
      ios_command:
        commands: "dir flash:/{{ folder }}/{{ ios_binary }}"
      register: dir_flash
      vars:
        ansible_command_timeout: 300


    - name: Check MD5 Hash
      ios_command:
        commands:
          - command: "verify /md5 flash:/{{ folder }}/{{ ios_binary }}"
      register: md5_result
      vars:
        ansible_command_timeout: 300
      when:
        - ios_binary in dir_flash.stdout[0]
      tags:
        - md5

    - name: Check Boot Path
      ios_command:
        commands: 'show boot | i BOOT'
      register: bootvar
     # when:
     #   - switch['ios_binary'] not in bootvar.stdout[0]
      tags:
        - bootvar

    - name: Change the boot image to the new version
      ios_command:
        commands:  "archive download-sw /leave-old-sw  flash:{{ ios_archive }}"      
      when: 
        - ios_md5_bin in md5_result.stdout[0]
        - ios_binary not in bootvar.stdout[0]
      vars:
        ansible_command_timeout: 4200
      tags:
        - boot

    - name: Save Config
      ios_command:
        commands: wr
      vars:
        ansible_command_timeout: 180

    - name: Check Boot Path
      ios_command:
        commands: 'show boot | i BOOT'
      register: bootvar
     # when:
     #   - switch['ios_binary'] not in bootvar.stdout[0]
      tags:
        - bootvar


    - debug:
         msg: ' {{ inventory_hostname }} boot system is  {{ bootvar.stdout[0] }}'

    - name: Assert That the boot path is set to the new IOS
      assert:
        that:
          - ios_binary in bootvar.stdout[0]
        fail_msg: 'Boot path is not set to compliant software on {{ inventory_hostname }}'
        success_msg: 'Boot path is set to compliant software on {{ inventory_hostname}} reload device to upgrade to target IOS version'
      when:
        - ansible_net_version != ios_version
      tags:
        - bootvar    

    
