Backoff and retry python concepts



import requests
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.retry import Retry

s = requests.Session()

retries = Retry(total=5,
                status_forcelist=[429, 500, 502, 503, 504])

s.mount('http://', HTTPAdapter(max_retries=retries))

s.get('http://quotes.toscrape.com/')

------------------------------------------------------------------------------------
import requests
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.retry import Retry

s = requests.Session()

retries = Retry(total=5,
                backoff_factor=1,
                status_forcelist=[429, 500, 502, 503, 504])

s.mount('http://', HTTPAdapter(max_retries=retries))

s.get('http://quotes.toscrape.com/')
---------------------------------------------------------------------------------------

how to calculate backoff factor


{backoff_factor} * (2 ** ({number_retries} - 1))

------------------------------------------------------------------------------------------


## backoff_factor = 1
0.5, 1, 2, 4, 8, 16, 32, 64, 128, 256

## backoff_factor = 2
1, 2, 4, 8, 16, 32, 64, 128, 256, 512

## backoff_factor = 3
5, 10, 20, 40, 80, 160, 320, 640, 1280, 2560

------------------------------------------------------------------------------------------


Build your own


import requests

NUM_RETRIES = 3
for _ in range(NUM_RETRIES):
    try:
        response = requests.get('http://quotes.toscrape.com/')
        if response.status_code in [200, 404]:
            ## Escape for loop if returns a successful response
            break
    except requests.exceptions.ConnectionError:
        pass
    
## Do something with successful response
if response is not None and response.status_code == 200:
    pass

--------------------------------------------------------------------------------------------


import requests

NUM_RETRIES = 3
for _ in range(NUM_RETRIES):
    try:
        response = requests.get('http://quotes.toscrape.com/')
        if response.status_code in [200, 404]:
            if response.status_code == 200 and '<title>Robot or human?</title>' not in response.text:
                break
    except requests.exceptions.ConnectionError:
        pass
    
## Do something with successful response
if response is not None and response.status_code == 200:
    pass

-------------------------------------------------------------------------------------------------


import requests

def request_retry(url, num_retries=3, success_list=[200, 404], **kwargs):
    for _ in range(num_retries):
        try:
            response = requests.get(url, **kwargs)
            if response.status_code in success_list:
                ## Return response if successful
                return response
        except requests.exceptions.ConnectionError:
            pass
    return None

response = request_retry('http://quotes.toscrape.com/')




