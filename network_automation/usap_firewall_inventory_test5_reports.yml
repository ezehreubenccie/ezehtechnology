---
- name: get facts from asa
  hosts:  usapfirewalls usap5505swmethodist
  connection: network_cli
  gather_facts: no

  vars:
    hostname:
    version:
    serialnum:
    ipaddress:
    physicaladdress:
    verdict:
    upgradeto:
    compliant_5545x: 9.12(4)10
    compliant_5506x: 9.8(4)22
    compliant_5508x: 9.8(4)22
    compliant_5505: 9.1(7)32
    non_compliant_5545x:
    non_compliant_5506x:
    non_compliant_5508x:
    non_compliant_5505:

  tasks:
    - name: asa facts
      asa_command:
        commands:
          - show run hostname
          - show version
          - show inventory
          - show ip | inc CONFIG
          - sh run snmp-server | grep location
      register: asa_vars



    - name: asa set facts
      set_fact:
        hostname: "{{ asa_vars['stdout'][0].split()[1] }}"
        version: "{{ asa_vars['stdout'][1].split('\n')[0][51:-1] }}"
        serialnum: "{{ asa_vars['stdout'][2].split('\n')[1].replace(' ','')[-11:] }}"
        ipaddress: "{{ asa_vars['stdout'][3].split('\n')[1]  | regex_search('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b') }}"
        physicaladdress: "{{ asa_vars.stdout[4][21:].replace(',','') }}"
    


    - name: set fact 2
      set_fact:
        verdict: 'compliant'
      when: (version  == compliant_5506x) or (version  == compliant_5508x) or (version  == compliant_5545x) or (version  ==  compliant_5505)

    - name: set fact 3
      set_fact:
        verdict: 'non-compliant'
      when: (version  != compliant_5506x) and (version  != compliant_5508x) and (version  != compliant_5545x) and (version  != compliant_5505)

    - name: set fact 4
      set_fact: 
        upgradeto: 'N/A'
      when: (version  == compliant_5506x) or (version  == compliant_5508x) or (version  == compliant_5545x) or (version  == compliant_5505)

    - name: set fact 5
      set_fact:
        upgradeto: '9.12(4)10'
      when: version == '9.12(3)12'        

    - name: set fact 6
      set_fact:
        upgradeto: '9.8(4)22'
      when: (version == '9.9(2)') and ('"5506" in hostname')
    

    - name: Display facts
      debug:
        msg: "The software version for {{ hostname }} is {{ version }} on platform {{ serialnum }} with ip address {{ ipaddress }} installed at {{ physicaladdress }}"

  

    - name: Write mydevices.csv
      run_once: true
      shell: echo Serial Number,Device Name,Software Version,Verdict,UpgradeTO,Tags,Notes  > myfirewalldevicesReport.csv


    - name: Write My Devices CSV File
      shell: echo "{{ serialnum }},{{ hostname }},{{ version }},{{ verdict }},{{ upgradeto }},{{ ipaddress }},{{ physicaladdress }}" >> myfirewalldevicesReport.csv
      delegate_to: localhost
