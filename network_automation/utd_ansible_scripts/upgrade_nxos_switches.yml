---
- name : UPGRADE Nexus SWITCHES
  connection: network_cli
  hosts: wan9k
  gather_facts: false


  vars:
    target_nxos_ver: 10.2(6)
    target_image: nxos64-cs.10.2.6.M.bin
    target_image_md5: a7ab27345fb90f654a943d1765df8142
    vrf: management
    install_check_mode: "no"

  tasks:
    - name: Backup the config for {{ inventory_hostname }}
      tags: backup, install
      nxos_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}_backup.cfg"
          dir_path: ../UTD_Backups/2023/
      register: config_output

    - name: Get current NXOS version in JSON format
      tags: pre-check, check-version, post-check, install
      nxos_command:
        commands: show version | json
      register: show_version


    - name: Set current NXOS version as variable
      tags: pre-check, check-version, post-check, install
      # debug: msg="{{ show_version.stdout_lines[0].nxos_ver_str }}"
      set_fact:
        current_nxos_ver: "{{ show_version['stdout_lines'][0]['nxos_ver_str'] }}"

    - name: Assert that switch is NOT running with the target NXOS version
      tags: pre-check, check-version, install
      assert:
        quiet: no
        success_msg: "{{ inventory_hostname }} not running target verion {{ target_nxos_ver }}, current version is {{ current_nxos_ver }}"
        fail_msg: "{{ inventory_hostname }} already running {{ current_nxos_ver }}"
        that:
          - "'{{ current_nxos_ver }}' != '{{ target_nxos_ver }}'"

    - name: Check if switch has the target image in the "bootflash:" directory 
      tags: pre-check, image-check, image-copy, install
      nxos_command:
        commands: "dir bootflash: | in {{ target_image }} | awk '{ print $6 }'"
      register: image_check

    - debug:
        var: image_check.stdout_lines[0]
      tags: image-check

    - debug:
        var: target_image
      tags: image-check

    - name: Install/Upgrade NXOS Software
      block:
        - name: Installing Target NXOS {{ target_nxos_ver }}
          tags: install
          check_mode: '{{ install_check_mode }}'
          nxos_install_os:
            system_image_file: '{{ target_image }}'
            issu: no
          register: install_output
          vars:
            ansible_command_timeout: 1800
            ansible_connect_timeout: 1800
          when: 
            - current_nxos_ver != target_nxos_ver
            - target_image in image_check.stdout_lines[0]

        - name: print Install Results
          tags: install
          debug: var=install_output.install_state
          when: 
            - current_nxos_ver != target_nxos_ver

        - name: reset the connection
          meta: reset_connection
            

      rescue:
        - name: Waiting For {{ inventory_hostname }} To Come Back Up
          wait_for:
            host: "{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}"
            port: 22
            state: started
            timeout: 300
            delay: 60
      
      always:
        - name: Assert that switch is running with the target NXOS version {{ target_nxos_ver }} After Upgrade
          tags: post-check, install
          assert:
            quiet: no
            success_msg: "{{ inventory_hostname }} has been upgraded to {{ current_nxos_ver }}"
            fail_msg: "Failed to upgrade the {{ inventory_hostname }}, it is still runninng {{ current_nxos_ver }}"
            that:
              - "'{{ current_nxos_ver }}' == '{{ target_nxos_ver }}'"
