---
- name: "PLAY 1: Build Cisco Nexus Switch Compliance Report"
  hosts: sjnexusc92348gcxsw
  gather_facts: False

  vars:
    compliant_9234: 10.4(1)
    non_compliant_9234: 9.3(9)

  tasks:
#    - name: "TASK 1: Gather Nexus Switch Facts"
#      cisco.nxos.nxos_facts:
#        gather_subset:
#          - all
#      register: nxos_facts
#      tags: facts

#    - name: "TASK 1_1: Gather interface facts"
#      cisco.nxos.nxos_facts:
#        gather_subset: 
#          - config
#        gather_network_resources:
#          - interfaces
#      register: nxos_intfs

#    - name: "TASK 2: Print Output"
#      debug:
#        var: nxos_facts
#      tags: facts

#    - name: "TASK 2_1: Print Output"
#      debug:
#        var: nxos_intfs
#
    - name: "TASK 3: Get System uptime"
      cisco.nxos.nxos_command:
        commands: show version | in upt
      register: sysupt
     # tags: sj

    - name: "TASK 4: Get Physical Address from Nexus Switch"
      cisco.nxos.nxos_command:
        commands:
          - command: sh run snmp | grep location
      register: snmp_location
      tags: sj 

    - name: "TASK 4_1: Get IP Address from Nexus Switch"
      cisco.nxos.nxos_command:
        commands:
          - command: sh run int mgmt0 | grep address
      register: ip_addr
      tags: sj

#    - name: "TASK 4_2: Get hostname from Nexus Switch"
#      cisco.nxos.nxos_command:
#        commands:
#          - command: sh run | grep hostname
#      register: device_name
#      tags: device     
#
    - name: "TASK 4_2_1: Get nxos version from Nexus Switch"
      cisco.nxos.nxos_command:
        commands:
          - command: "sh ver | grep NXOS:"
      register: device_version
      tags: sj

    - name: "TASK 4_2_1_1: Get Switch Serial Number"
      cisco.nxos.nxos_command:
        commands:
          - command: sh ver | in Processor
      register: serial_num
      tags: sj

    - name: "TASK 4_2_1_2: Get Switch Model"
      cisco.nxos.nxos_command:
        commands:
          - command: sh ver | grep Chassis
      register: device_model
      tags: sj
#
    - name: "TASK 4_2_2: Print Version"
      debug:
        msg: "{{ device_version }}"
      tags: sj

    - name: "TASK 4_2_2_1: Print Serial Number"
      debug:
        msg: "{{ serial_num }}"
      tags: sj

    - name: "TASK 4_2_2_2: Print Model"
      debug:
        msg: "{{ device_model }}"
      tags: sj
#
#    - name: "TASK 4_3: Print Hostname"
#      debug:
#        var: device_name
#      tags: device

#    - name: "TASK 5: Print System Uptime"
#      debug:
#        var: sysupt.stdout_lines[0][0].split()
#
#    - name: "TASK 6: Print SNMP Location"
#      debug:
#        var: snmp_location.stdout[0][21:].replace(',','')
#
#    - name: "TASK 6_1: Print IP Address"
#      debug:
#        msg:
#          - "{{ ip_addr.stdout_lines[0][0].split()[-1] }}"
#      tags: sj

    - name: "TASK 6_1: Set Facts"
      set_fact:
        version: "{{ ansible_net_version }}"
        days_last_upgraded: "{{ sysupt.stdout_lines[0][0].split()[3] }}"
        ipaddress: "{{ ansible_net_all_ipv4_addresses[0] }}"
        model: "{{ ansible_net_model }}"
        serialnum: "{{ ansible_net_serialnum }}"
        hostname: "{{ ansible_net_hostname }}"
        physicaladdress: "{{ snmp_location.stdout[0][21:].replace(',','') }}"
      when: ansible_net_version != non_compliant_5672up 

    - name: "TASK 6_2: Set Facts"
      set_fact:
        version: "{{ ansible_net_version }}"
        days_last_upgraded: "{{ sysupt.stdout_lines[0][0].split()[3] }}"
        ipaddress_wa: "{{ ip_addr.stdout_lines[0][0].split()[-1].split('/')[0] }}"
        model: "{{ ansible_net_model }}"
        serialnum: "{{ ansible_net_serialnum }}"
        hostname: "{{ inventory_hostname }}"
        physicaladdress: "{{ snmp_location.stdout[0][21:].replace(',','') }}"
      

#    - name: "TASK 7: Print Facts"
#      debug:
#        msg:
#          - "{{ version }}"
#          - "{{ days_last_upgraded }}"
#          - "{{ ipaddress }}"
#          - "{{ model }}"
#          - "{{ serialnum }}"
#          - "{{ hostname }}"
#          - "{{ physicaladdress }}"
#      when: ansible_net_version != non_compliant_5672up
#
#    - name: "TASK 7_1: Print Facts"
#      debug:
#        msg:
#          - "{{ ipaddress_wa }}"
#      when: '"wa-lan-sd" in inventory_hostname'

    - name: "TASK 8: Set Fact 1"
      set_fact:
        verdict: 'compliant'
      when: (version  == compliant_9234)  or (version  == compliant_3548p) or (version  == compliant_5672up) or  (version  == compliant_9234_2)

#    - name: "TASK 8_1: Set Fact 1"
#      set_fact:
#        verdict: 'compliant'
#      when: (version  == compliant_9234_2)

    - name: "TASK 9: Set Fact 2"
      set_fact:
        verdict: 'non-compliant'
      when: (version  != compliant_9234)  or (version  != compliant_3548p) or (version  != compliant_5672up)  or (version  != compliant_9234_2)


#    - name: "TASK 9_1: Set Fact 2"
#      set_fact:
#        verdict: 'non-compliant'
#      when: (version  != compliant_9234_2)

    - name: "TASK 10: Set Fact 3"
      set_fact:
        upgradeto: 'N/A'
      when: (version  == compliant_9234)  or (version  == compliant_3548p) or (version  == compliant_5672up) or (version  == compliant_9234_2)

    - name: "TASK 11: Set Fact 4"
      set_fact:
        upgradeto: '{{ compliant_9234 }}'
      when:  '"9234" in ansible_net_model'

    - name: "TASK 12: Set Fact 5"
      set_fact:
        upgradeto: '{{ compliant_3548p }}'
      when: '"3548P" in ansible_net_model'

    - name: "TASK 13: Set Fact 6"
      set_fact:
        upgradeto: '{{ compliant_5672up }}'
      when: (version  == non_compliant_5672up) 

    - name: "TASK 14: Print Info"
      debug:
        msg: 'The device name is {{ hostname }}, ip address is {{ ipaddress }},  version is {{ version }}, serial number is {{ serialnum}}, physical address is {{ physicaladdress }}.'
      when: ansible_net_version != non_compliant_5672up
   
    - name: "TASK 14_1: Print Info"
      debug:
        msg: 'The device name is {{ hostname }}, ip address is {{ ipaddress_wa }},  version is {{ version }}, serial umber is {{ serialnum}}, physical address is {{ physicaladdress }}.'
      when: '"wa-lan-sd" in inventory_hostname'

    - name: "TASK 15: Write mydevices.csv"
      run_once: true
      shell: echo Serial Number,Device Name,Device Model,Software Version,Verdict,UpgradeTO,DaysSincelastUpgrade,Tags,Notes  > NexusswitchComplianceReport.csv



    - name: "TASK 16: Write My Devices CSV File"
      shell: echo "{{ serialnum }},{{ hostname }},{{ model }},{{ version }},{{ verdict }},{{ upgradeto }},{{ days_last_upgraded }},{{ ipaddress }},{{ physicaladdress }}" >> NexusswitchComplianceReport.csv
      delegate_to: localhost
      when: ansible_net_version != non_compliant_5672up


    - name: "TASK 16_1: Write My Devices CSV File"
      shell: echo "{{ serialnum }},{{ hostname }},{{ model }},{{ version }},{{ verdict }},{{ upgradeto }},{{ days_last_upgraded }},{{ ipaddress_wa }},{{ physicaladdress }}" >> NexusswitchComplianceReport.csv
      delegate_to: localhost
      when: '"wa-lan-sd" in inventory_hostname'
