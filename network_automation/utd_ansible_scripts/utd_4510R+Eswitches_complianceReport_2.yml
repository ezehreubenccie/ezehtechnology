- name: BUILD CISCO 4510R+E SWITCHES INVENTORY
  connection: network_cli
  hosts: wa4500coresw
  gather_facts: false

  vars:
    hostname:
    version:
    serialnum:
    ipaddress:
    physicaladdress:
    verdict:
    upgradeto: 
    compliant_4510: 03.11.07.E
    non_compliant_4510: 03.06.01.E
    date_of_upgrade:
    time_of_upgrade:
    time_zone_of_upgrade:
    day_of_upgrade:


  tasks:
    - name: Get Physical Address from Switch
      ios_command:
        commands:
          - command: show run | in snmp-server location
      register: snmp_location

    - debug:
        var: snmp_location.stdout[0][21:]

    - name: Gather 4510R+E Switch Facts
      ios_facts:
        gather_subset: all
      register: switchfacts

    #- debug:
        #var: switchfacts

    - name: Get When System Last Restarted
      ios_command:
        commands:
          - command: show version | in System restarted
      register: sysrestart


    - set_fact:
        ipaddress: "{{ ansible_net_all_ipv4_addresses[0] }}"
        version: "{{ ansible_net_version }}"
        serialnum: '{{ ansible_net_serialnum }}'
        model: "{{ ansible_net_model }}"
        hostname: '{{ ansible_net_hostname }}'
        physicaladdress: "{{ snmp_location.stdout[0][21:].replace(',','') }}"
        date_of_upgrade: "{{ sysrestart.stdout_lines[0][-1].split()[6] + ' ' + sysrestart.stdout_lines[0][-1].split()[7] + ' ' + sysrestart.stdout_lines[0][-1].split()[8] }}"
        time_of_upgrade: "{{ sysrestart.stdout_lines[0][-1].split()[3] }}"
        time_zone_of_upgrade: "{{ sysrestart.stdout_lines[0][-1].split()[4] }}"
        day_of_upgrade: "{{ sysrestart.stdout_lines[0][-1].split()[5] }}"

    - name: set fact 2
      set_fact:
        verdict: 'compliant'
      when: version == compliant_4510

    - name: set fact 3
      set_fact:
        verdict: 'non-compliant'
      when: version == non_compliant_4510

    - name: set fact 4
      set_fact:
        upgradeto: 'N/A'
      when: version == compliant_4510

    - name: set fact 5
      set_fact:
        upgradeto: '{{ compliant_4510 }}'
      when: version != compliant_4510

    #- debug:
        #var: snmp_location.stdout[0][21:].replace(',','')
        

    #- debug:
        #var: ipaddress

    - debug:
        msg: 'The device name is {{ hostname }}, ip address of MANAGEMENT VLAN interface is {{ ipaddress }},  version is {{ version }}, serial number is {{ serialnum }}, physical address is {{ physicaladdress }}.'

    - name: Write mydevices.csv
      run_once: true
      shell: echo Serial Number,Device Name,Device Model,Software Version,Verdict,UpgradeTO,TimeUpgraded,TimeZoneOfUpgrade,DayOfUpgrade,DateUpgraded,Tags,Notes  > 4510R+EComplianceReport.csv



    - name: Write My Devices CSV File
      shell: echo "{{ serialnum }},{{ hostname }},{{ model }},{{ version }},{{ verdict }},{{ upgradeto }},{{ time_of_upgrade }},{{ time_zone_of_upgrade }},{{ day_of_upgrade }},{{ date_of_upgrade }},{{ ipaddress }},{{ physicaladdress }}" >> 4510R+EComplianceReport.csv
      delegate_to: localhost
